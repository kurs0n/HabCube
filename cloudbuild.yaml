steps:
  # 1. Build Docker image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "${_IMAGE_TAG}", "./backend"]

  # 2. Push Docker image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_IMAGE_TAG}"]

  # 3. Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud run deploy backend \
          --image "${_IMAGE_TAG}" \
          --platform managed \
          --region "${_REGION}" \
          --allow-unauthenticated \
          --service-account "${_SERVICE_ACCOUNT}" \
          --vpc-connector "projects/${_PROJECT_ID}/locations/${_REGION}/connectors/vpc" \
          --vpc-egress=private-ranges-only \
          --set-env-vars "FLASK_ENV=production,DB_HOST=${_CLOUD_SQL_PRIVATE_IP},DB_PORT=5432,DB_USER=${_DB_USER},DB_NAME=${_DB_NAME},REDIS_HOST=${_REDIS_HOST},REDIS_PORT=${_REDIS_PORT}" \
          --update-secrets "DB_PASSWORD=db-password:latest,REDIS_PASSWORD=redis-password:latest,SECRET_KEY=flask-key:latest,JWT_SECRET_KEY=jwt-key:latest"

  # 4. (Re)create and run migration job
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        set -e
        gcloud run jobs delete backend-migrate --region "${_REGION}" --quiet || true
        gcloud run jobs create backend-migrate \
          --image "${_IMAGE_TAG}" \
          --region "${_REGION}" \
          --service-account "${_SERVICE_ACCOUNT}" \
          --vpc-connector "projects/${_PROJECT_ID}/locations/${_REGION}/connectors/vpc" \
          --vpc-egress=private-ranges-only \
          --set-env-vars "FLASK_ENV=production,FLASK_APP=wsgi:app,DB_HOST=${_CLOUD_SQL_PRIVATE_IP},DB_PORT=5432,DB_USER=${_DB_USER},DB_NAME=${_DB_NAME},REDIS_HOST=${_REDIS_HOST},REDIS_PORT=${_REDIS_PORT}" \
          --update-secrets "DB_PASSWORD=db-password:latest,REDIS_PASSWORD=redis-password:latest,SECRET_KEY=flask-key:latest,JWT_SECRET_KEY=jwt-key:latest" \
          --command "flask" --args "db","upgrade" \
          --task-timeout 10m
        gcloud run jobs execute backend-migrate --region "${_REGION}" --wait

  # 5. (Re)create and run seed job
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        set -e
        gcloud run jobs delete backend-seed --region "${_REGION}" --quiet || true
        gcloud run jobs create backend-seed \
          --image "${_IMAGE_TAG}" \
          --region "${_REGION}" \
          --service-account "${_SERVICE_ACCOUNT}" \
          --vpc-connector "projects/${_PROJECT_ID}/locations/${_REGION}/connectors/vpc" \
          --vpc-egress=private-ranges-only \
          --set-env-vars "FLASK_ENV=production,FLASK_APP=wsgi:app,DB_HOST=${_CLOUD_SQL_PRIVATE_IP},DB_PORT=5432,DB_USER=${_DB_USER},DB_NAME=${_DB_NAME},REDIS_HOST=${_REDIS_HOST},REDIS_PORT=${_REDIS_PORT}" \
          --update-secrets "DB_PASSWORD=db-password:latest,REDIS_PASSWORD=redis-password:latest,SECRET_KEY=flask-key:latest,JWT_SECRET_KEY=jwt-key:latest" \
          --command "flask" --args "seed" \
          --task-timeout 10m
        gcloud run jobs execute backend-seed --region "${_REGION}" --wait

substitutions:
  _PROJECT_ID: "iot2025-475717"
  _REGION: "europe-west1"
  _IMAGE_TAG: "europe-west1-docker.pkg.dev/iot2025-475717/cloud-run-source-deploy/habcube-backend:latest"
  _SERVICE_ACCOUNT: "cloud-run-service-account@iot2025-475717.iam.gserviceaccount.com"
  _CLOUD_SQL_PRIVATE_IP: "10.105.42.17"
  _DB_USER: "admin"
  _DB_NAME: "habcube"
  _REDIS_HOST: "10.105.55.227"
  _REDIS_PORT: "6379"

options:
  logging: CLOUD_LOGGING_ONLY
